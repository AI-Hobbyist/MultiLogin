###########################################################################
#           这里是 MultiLogin 的 service 完整示例文件, 格式使用 'HOCON'
#
#      访问 'https://github.com/lightbend/config/blob/master/HOCON.md'
#   可了解有关 HOCON 配置文件格式的过多信息.
#
#     问题和建议反馈请前往 'https://github.com/CaaMoe/MultiLogin/issues'
###########################################################################

# service 的 id, 通常用于识别 servoce 的唯一标识.
# 它不可以是重复的值, 重复的值将会导致数据错乱和丢失!!!
#
# 请不要在使用中途修改这个值, 否则玩家数据将会错乱和丢失!!!
# 这个值为必须值, 取值范围为整数 [0, 127].
service_id = -1

# service 的别称, 将用于信息显示
#
# 默认值 'Unnamed'
service_name = "Unnamed"

# service 类型, 按需填写:
#   OFFICIAL           ---  这个值表示官方的正版验证 (Yggdrasil 类型)
#   BLESSING_SKIL      ---  这个值表示 Blessing Skin 验证 (Yggdrasil 类型)
#   CUSTOM_YGGDRASIL   ---  这个值表示高度自定义的 Yggdrasil 验证 (Yggdrasil 类型)
#   FLOODGATE          ---  这个值表示 Geyser 的 Floodgate 验证
#
# 此值为必须值
service_type: CUSTOM_YGGDRASIL

# 设置玩家首次登录时生成的档案 uuid 的生成规则
#
# 请使用以下值:
#    ONLINE       - 使用验证服务提供的在线 UUID
#    OFFLINE      - 使用玩家名字获取到的离线 UUID
#    RANDOM       - 随机 UUID
#
# 请谨慎设置和修改此节点, 避免增加日后维护的心智负担
#
# 默认值 ONLINE
uuid_generate_type: ''

# 是否为当前 service 的玩家单独开启白名单功能
#
# 默认值 true
whitelist: true

# 针对 service 类型为任一 Yggdrasil 的额外配置设置
yggdrasil_settings: {

  # 玩家在登录时是否将玩家的 ip 信息发送给 Yggdrasil 以辅助反代理检查
  #
  # 默认值 true
  track_ip = true

  # 服务端请求 Yggdrasil 的超时时间设置
  # 请注意, 过大的值可能会导致登录超时
  #
  # 默认值 10000
  timeout: 10000

  # 请求网络异常的最大重试次数
  # 请注意, 过大的值可能会导致登录超时
  #
  # 默认值 0
  retry: 0

  # 延迟重试设置
  # 请注意, 过大的值可能会导致登录超时
  #
  # 默认值 0
  delay_retry: 0

  # 针对 service 为 BLESSING_SKIN 的额外配置设置
  blessing_skin: {

    # 指定 Blessing Skin Yggdrasil API 地址
    #
    # 此值为必须值
    yggdrasil_api_root: ''
  }

  # 针对 service 为 CUSTOM_YGGDRASIL 的额外配置设置
  custom: {

    # 指定 Yggdrasil hasjoined 的请求链接
    #
    # 变量列表:
    #  {0} 或 {username}   表示请求的玩家的名字
    #  {1} 或 {server_id}  表示请求的 server id
    #  {2} 或 {ip_content} 表示请求的玩家的ip(根据ip_content来生成)
    #
    # 示例链接:
    #  GET:  https://example.com/session/minecraft/hasJoined?username={0}&serverId={1}{2}
    #  POST: https://example.com/session/minecraft/hasJoined
    #
    # 几个验证服务器链接例子:
    # OFFICIAL: https://sessionserver.mojang.com/session/minecraft/hasJoined?username={0}&serverId={1}{2}
    # LITTLE_SKIN: https://littleskin.cn/api/yggdrasil/sessionserver/session/minecraft/hasJoined?username={0}&serverId={1}{2}
    #
    # 在使用过程中不建议将正版验证以 CUSTOM_YGGDRASIL 的形式进行配置, 请使用 OFFICIAL 一键配置
    # 在使用过程中不建议将 Little Skin 验证以 CUSTOM_YGGDRASIL 的形式进行配置, 请使用 BLESSING_SKIN 快速配置
    #
    # 此值为必须值
    has_joined_url: ''

    # 指定 Yggdrasil hasjoined 请求方式, 只支持 GET 和 POST 这两个值
    #
    # 此值为必须值
    http_method_type: ''

    # 设置 Yggdrasil hasJoined 发送 POST 的内容.
    #
    # 变量列表:
    #  {0} 或 {username}   表示请求的玩家的名字
    #  {1} 或 {server_id}  表示请求的 server id
    #  {2} 或 {ip_content} 表示请求的玩家的ip(根据ip_content来生成)
    #
    # 一些例子:
    #   '{"username":"{0}", "serverId":"{1}"{2}}'
    #   '{"username":"{0}", "serverId":"{1}"}'
    #
    # 仅当 http_method 值为 'POST' 时, 此值为必须值
    post_content: ''

    # 指定 ip_content 中具体的请求内容
    #
    # 变量列表:
    #  {0} 或 {ip}   表示请求的玩家的 ip 信息
    #
    # 仅当 track_ip 为 true 时此值有效
    # 留意 url 大小写和拼接的特殊值处理 '&' 和 ', '
    #
    # 例子:
    #   针对 GET:  '&ip={0}'
    #   针对 POST: ', "ip":"{0}"'
    #
    # 虽然这个值在 track_ip 为 false 的情况下不生效, 但是这个值依然是一个必须值
    track_ip_content: ''
  }
}
